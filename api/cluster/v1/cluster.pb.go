// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: api/cluster/v1/cluster.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Traefik represents the configuration for the Traefik ingress controller.
type Traefik struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// httpNodePort specifies the NodePort for the HTTP port of the Traefik ingress controller.
	HttpNodePort string `protobuf:"bytes,1,opt,name=httpNodePort,json=http_node_port,proto3" json:"httpNodePort,omitempty"`
	// httpsNodePort specifies the NodePort for the HTTPS port of the Traefik ingress controller.
	HttpsNodePort string `protobuf:"bytes,2,opt,name=httpsNodePort,json=https_node_port,proto3" json:"httpsNodePort,omitempty"`
}

func (x *Traefik) Reset() {
	*x = Traefik{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cluster_v1_cluster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Traefik) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Traefik) ProtoMessage() {}

func (x *Traefik) ProtoReflect() protoreflect.Message {
	mi := &file_api_cluster_v1_cluster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Traefik.ProtoReflect.Descriptor instead.
func (*Traefik) Descriptor() ([]byte, []int) {
	return file_api_cluster_v1_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *Traefik) GetHttpNodePort() string {
	if x != nil {
		return x.HttpNodePort
	}
	return ""
}

func (x *Traefik) GetHttpsNodePort() string {
	if x != nil {
		return x.HttpsNodePort
	}
	return ""
}

// Vcluster represents the configuration for the virtual cluster.
type Vcluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// httpsNodePort specifies the NodePort for the HTTPS port of the virtual cluster.
	HttpsNodePort string `protobuf:"bytes,1,opt,name=httpsNodePort,json=https_node_port,proto3" json:"httpsNodePort,omitempty"`
}

func (x *Vcluster) Reset() {
	*x = Vcluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cluster_v1_cluster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vcluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vcluster) ProtoMessage() {}

func (x *Vcluster) ProtoReflect() protoreflect.Message {
	mi := &file_api_cluster_v1_cluster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vcluster.ProtoReflect.Descriptor instead.
func (*Vcluster) Descriptor() ([]byte, []int) {
	return file_api_cluster_v1_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *Vcluster) GetHttpsNodePort() string {
	if x != nil {
		return x.HttpsNodePort
	}
	return ""
}

// SaveRequest represents a request to save a cluster.
type SaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// clusterName specifies the name of the cluster.
	ClusterName string `protobuf:"bytes,2,opt,name=clusterName,json=cluster_name,proto3" json:"clusterName,omitempty"`
	// insecureSkipCheck specifies whether to skip the certificate check when connecting to the API server.
	InsecureSkipCheck bool `protobuf:"varint,3,opt,name=insecureSkipCheck,json=insecure_skip_check,proto3" json:"insecureSkipCheck,omitempty"`
	// body specifies the body of the save request.
	Body *SaveRequest_Body `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *SaveRequest) Reset() {
	*x = SaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cluster_v1_cluster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRequest) ProtoMessage() {}

func (x *SaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_cluster_v1_cluster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRequest.ProtoReflect.Descriptor instead.
func (*SaveRequest) Descriptor() ([]byte, []int) {
	return file_api_cluster_v1_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *SaveRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *SaveRequest) GetInsecureSkipCheck() bool {
	if x != nil {
		return x.InsecureSkipCheck
	}
	return false
}

func (x *SaveRequest) GetBody() *SaveRequest_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

// SaveReply represents a response to a save request.
type SaveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// msg specifies the message of the save response.
	Msg string `protobuf:"bytes,1,opt,name=msg,json=message,proto3" json:"msg,omitempty"`
}

func (x *SaveReply) Reset() {
	*x = SaveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cluster_v1_cluster_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveReply) ProtoMessage() {}

func (x *SaveReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_cluster_v1_cluster_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveReply.ProtoReflect.Descriptor instead.
func (*SaveReply) Descriptor() ([]byte, []int) {
	return file_api_cluster_v1_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *SaveReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// Represents a request to delete a deployment runtime manifest.
type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ProductName is the name of the product.
	ProductName string `protobuf:"bytes,1,opt,name=productName,json=product_name,proto3" json:"productName,omitempty"`
	// ClusterName is the name of the cluster.
	ClusterName string `protobuf:"bytes,2,opt,name=clusterName,json=cluster_name,proto3" json:"clusterName,omitempty"`
	// InsecureSkipCheck specifies whether to skip security checks.
	InsecureSkipCheck bool `protobuf:"varint,3,opt,name=insecureSkipCheck,json=insecure_skip_check,proto3" json:"insecureSkipCheck,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cluster_v1_cluster_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_cluster_v1_cluster_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_cluster_v1_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRequest) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *DeleteRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *DeleteRequest) GetInsecureSkipCheck() bool {
	if x != nil {
		return x.InsecureSkipCheck
	}
	return false
}

// Represents a response to a DeleteRequest message.
type DeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// msg specifies the message of the delete response.
	Msg string `protobuf:"bytes,1,opt,name=msg,json=message,proto3" json:"msg,omitempty"`
}

func (x *DeleteReply) Reset() {
	*x = DeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cluster_v1_cluster_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReply) ProtoMessage() {}

func (x *DeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_cluster_v1_cluster_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReply.ProtoReflect.Descriptor instead.
func (*DeleteReply) Descriptor() ([]byte, []int) {
	return file_api_cluster_v1_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// Body represents the body of the save request.
type SaveRequest_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// apiServer specifies the API server address of the cluster.
	ApiServer string `protobuf:"bytes,1,opt,name=apiServer,json=api_server,proto3" json:"apiServer,omitempty"`
	// clusterKind specifies the kind of the cluster.
	ClusterKind string `protobuf:"bytes,2,opt,name=clusterKind,json=cluster_kind,proto3" json:"clusterKind,omitempty"`
	// clusterType specifies the type of the cluster. It can be "physical" or "virtual".
	ClusterType string `protobuf:"bytes,3,opt,name=clusterType,json=cluster_type,proto3" json:"clusterType,omitempty"`
	// usage specifies the usage of the cluster. It can be "host" or "worker".
	Usage string `protobuf:"bytes,4,opt,name=usage,proto3" json:"usage,omitempty"`
	// hostCluster specifies the host cluster name if the cluster is a virtual cluster.
	HostCluster string `protobuf:"bytes,5,opt,name=hostCluster,json=host_cluster,proto3" json:"hostCluster,omitempty"`
	// argocdHost specifies the ArgoCD host name.
	ArgocdHost string `protobuf:"bytes,6,opt,name=argocdHost,json=argocd_host,proto3" json:"argocdHost,omitempty"`
	// vcluster specifies the configuration of the virtual cluster.
	Vcluster *Vcluster `protobuf:"bytes,7,opt,name=vcluster,proto3" json:"vcluster,omitempty"`
	// traefik specifies the configuration of the Traefik ingress controller.
	Traefik *Traefik `protobuf:"bytes,9,opt,name=traefik,proto3" json:"traefik,omitempty"`
	// kubeconfig specifies the Kubeconfig file of the cluster.
	Kubeconfig string `protobuf:"bytes,10,opt,name=kubeconfig,proto3" json:"kubeconfig,omitempty"`
}

func (x *SaveRequest_Body) Reset() {
	*x = SaveRequest_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cluster_v1_cluster_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRequest_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRequest_Body) ProtoMessage() {}

func (x *SaveRequest_Body) ProtoReflect() protoreflect.Message {
	mi := &file_api_cluster_v1_cluster_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRequest_Body.ProtoReflect.Descriptor instead.
func (*SaveRequest_Body) Descriptor() ([]byte, []int) {
	return file_api_cluster_v1_cluster_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SaveRequest_Body) GetApiServer() string {
	if x != nil {
		return x.ApiServer
	}
	return ""
}

func (x *SaveRequest_Body) GetClusterKind() string {
	if x != nil {
		return x.ClusterKind
	}
	return ""
}

func (x *SaveRequest_Body) GetClusterType() string {
	if x != nil {
		return x.ClusterType
	}
	return ""
}

func (x *SaveRequest_Body) GetUsage() string {
	if x != nil {
		return x.Usage
	}
	return ""
}

func (x *SaveRequest_Body) GetHostCluster() string {
	if x != nil {
		return x.HostCluster
	}
	return ""
}

func (x *SaveRequest_Body) GetArgocdHost() string {
	if x != nil {
		return x.ArgocdHost
	}
	return ""
}

func (x *SaveRequest_Body) GetVcluster() *Vcluster {
	if x != nil {
		return x.Vcluster
	}
	return nil
}

func (x *SaveRequest_Body) GetTraefik() *Traefik {
	if x != nil {
		return x.Traefik
	}
	return nil
}

func (x *SaveRequest_Body) GetKubeconfig() string {
	if x != nil {
		return x.Kubeconfig
	}
	return ""
}

var File_api_cluster_v1_cluster_proto protoreflect.FileDescriptor

var file_api_cluster_v1_cluster_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x65, 0x66, 0x69, 0x6b,
	0x12, 0x24, 0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x73, 0x4e,
	0x6f, 0x64, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x68,
	0x74, 0x74, 0x70, 0x73, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x32,
	0x0a, 0x08, 0x56, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0d, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x68, 0x74, 0x74, 0x70, 0x73, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x22, 0xa8, 0x04, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x53, 0x6b, 0x69, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x34, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x8f, 0x03, 0x0a, 0x04,
	0x42, 0x6f, 0x64, 0x79, 0x12, 0x26, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0a, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x0b,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xfa,
	0x42, 0x15, 0x72, 0x13, 0x52, 0x08, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x07,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10, 0x72, 0x0e, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x21, 0x0a, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0a, 0x61, 0x72, 0x67, 0x6f, 0x63, 0x64, 0x48, 0x6f, 0x73,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x67, 0x6f, 0x63, 0x64, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x76, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x08, 0x76, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x74, 0x72,
	0x61, 0x65, 0x66, 0x69, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61,
	0x65, 0x66, 0x69, 0x6b, 0x52, 0x07, 0x74, 0x72, 0x61, 0x65, 0x66, 0x69, 0x6b, 0x12, 0x1e, 0x0a,
	0x0a, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x21, 0x0a,
	0x09, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x85, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x6b,
	0x69, 0x70, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x22, 0x23, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xf3, 0x01,
	0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x73, 0x0a, 0x0b, 0x53, 0x61, 0x76,
	0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x73,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x20, 0x2a, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x7d, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6e, 0x61, 0x75, 0x74, 0x65, 0x73, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x61, 0x70,
	0x69, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_cluster_v1_cluster_proto_rawDescOnce sync.Once
	file_api_cluster_v1_cluster_proto_rawDescData = file_api_cluster_v1_cluster_proto_rawDesc
)

func file_api_cluster_v1_cluster_proto_rawDescGZIP() []byte {
	file_api_cluster_v1_cluster_proto_rawDescOnce.Do(func() {
		file_api_cluster_v1_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_cluster_v1_cluster_proto_rawDescData)
	})
	return file_api_cluster_v1_cluster_proto_rawDescData
}

var file_api_cluster_v1_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_cluster_v1_cluster_proto_goTypes = []interface{}{
	(*Traefik)(nil),          // 0: api.cluster.v1.Traefik
	(*Vcluster)(nil),         // 1: api.cluster.v1.Vcluster
	(*SaveRequest)(nil),      // 2: api.cluster.v1.SaveRequest
	(*SaveReply)(nil),        // 3: api.cluster.v1.SaveReply
	(*DeleteRequest)(nil),    // 4: api.cluster.v1.DeleteRequest
	(*DeleteReply)(nil),      // 5: api.cluster.v1.DeleteReply
	(*SaveRequest_Body)(nil), // 6: api.cluster.v1.SaveRequest.Body
}
var file_api_cluster_v1_cluster_proto_depIdxs = []int32{
	6, // 0: api.cluster.v1.SaveRequest.body:type_name -> api.cluster.v1.SaveRequest.Body
	1, // 1: api.cluster.v1.SaveRequest.Body.vcluster:type_name -> api.cluster.v1.Vcluster
	0, // 2: api.cluster.v1.SaveRequest.Body.traefik:type_name -> api.cluster.v1.Traefik
	2, // 3: api.cluster.v1.Cluster.SaveCluster:input_type -> api.cluster.v1.SaveRequest
	4, // 4: api.cluster.v1.Cluster.DeleteCluster:input_type -> api.cluster.v1.DeleteRequest
	3, // 5: api.cluster.v1.Cluster.SaveCluster:output_type -> api.cluster.v1.SaveReply
	5, // 6: api.cluster.v1.Cluster.DeleteCluster:output_type -> api.cluster.v1.DeleteReply
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_cluster_v1_cluster_proto_init() }
func file_api_cluster_v1_cluster_proto_init() {
	if File_api_cluster_v1_cluster_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_cluster_v1_cluster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Traefik); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cluster_v1_cluster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vcluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cluster_v1_cluster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cluster_v1_cluster_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cluster_v1_cluster_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cluster_v1_cluster_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cluster_v1_cluster_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRequest_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_cluster_v1_cluster_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_cluster_v1_cluster_proto_goTypes,
		DependencyIndexes: file_api_cluster_v1_cluster_proto_depIdxs,
		MessageInfos:      file_api_cluster_v1_cluster_proto_msgTypes,
	}.Build()
	File_api_cluster_v1_cluster_proto = out.File
	file_api_cluster_v1_cluster_proto_rawDesc = nil
	file_api_cluster_v1_cluster_proto_goTypes = nil
	file_api_cluster_v1_cluster_proto_depIdxs = nil
}

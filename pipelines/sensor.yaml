apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: repo-33-base-init-pipeilne
  namespace: argo-events
spec:
  template:
    serviceAccountName: argo-events-sa
  dependencies:
    - name: gitlab-dep-push
      eventSourceName: webhook
      eventName: repo-33
      transform:
        script: |-
          if event.body.ref == "refs/heads/main" then
            event.body.pipeline='pipelines/pipeline.yaml'
          elseif string.match(event.body.ref, "refs/heads/feature.*") then
            event.body.pipeline='pipelines/pipeline-dev.yaml'
          end
          return event
      filters:
        script: |-
          deploymentDirName = "deployments/"
          function startsWith(str, prefix)
            return string.sub(str, 1, string.len(prefix)) == prefix
          end
          function isSkip(files)
            for a = 1, #files do
              if not startsWith(files[a], deploymentDirName) then
                return false
              end
            end
            return true
          end
          for i = 1, #event.body.commits do
            commit = event.body.commits[i]
            if not (isSkip(commit.added) and isSkip(commit.modified) and isSkip(commit.removed)) then
              return true
            end
          end
          return false
  triggers:
    - template:
        name: repo-33-init-pipeilne
        k8s:
          operation: create
          source:
            resource:
              apiVersion: tekton.dev/v1beta1
              kind: PipelineRun
              metadata:
                generateName: init-pipiline-
                namespace: repo-33
              spec:
                params:
                - name: REVISION
                  value: main
                - name: PIPELINE
                  value: pipelines/pipeline.yaml                  
                taskRunSpecs:
                - pipelineTaskName: git-clone
                  metadata:
                    annotations:
                      vault.hashicorp.com/agent-inject: 'true'
                      vault.hashicorp.com/tls-secret: "ca"
                      vault.hashicorp.com/ca-cert: "/vault/tls/ca.crt"
                      vault.hashicorp.com/agent-pre-populate-only: "true"
                      vault.hashicorp.com/role: 'repo-33'
                      vault.hashicorp.com/agent-run-as-user: '0' 
                      vault.hashicorp.com/agent-run-as-group: '0'
                      vault.hashicorp.com/agent-inject-secret-id_ecdsa: "git/data/gitlab/repo-33/default/readwrite"
                      vault.hashicorp.com/secret-volume-path-id_ecdsa: "/root/.ssh"
                      vault.hashicorp.com/agent-inject-perms-id_ecdsa: '0400'
                      vault.hashicorp.com/agent-inject-template-id_ecdsa: |
                        {{- with secret "git/data/gitlab/repo-33/default/readwrite" -}}
                        {{ .Data.data.deploykey }}
                        {{- end -}}
                - pipelineTaskName: nautes-reporter
                  metadata:
                    annotations:
                      vault.hashicorp.com/agent-inject: 'true'
                      vault.hashicorp.com/tls-secret: "ca"
                      vault.hashicorp.com/ca-cert: "/vault/tls/ca.crt"
                      vault.hashicorp.com/agent-pre-populate-only: "true"
                      vault.hashicorp.com/role: 'repo-33'
                      vault.hashicorp.com/agent-run-as-user: '0' 
                      vault.hashicorp.com/agent-run-as-group: '0'
                      vault.hashicorp.com/agent-inject-secret-token: "git/data/gitlab/repo-33/default/readwrite"
                      vault.hashicorp.com/secret-volume-path-token: "/var"
                      vault.hashicorp.com/agent-inject-perms-token: '0400'
                      vault.hashicorp.com/agent-inject-template-token: |
                        {{- with secret "git/data/gitlab/repo-33/default/readwrite" -}}
                        {{ .Data.data.accesstoken }}
                        {{- end -}}
                      vault.hashicorp.com/agent-inject-secret-ca.crt: pki/data/default
                      vault.hashicorp.com/secret-volume-path-ca.crt: /usr/local/share/ca-certificates
                      vault.hashicorp.com/agent-inject-template-ca.crt: |
                        {{- with secret "pki/data/default" -}}
                        {{ .Data.data.cacert }}
                        {{- end -}}
                pipelineSpec:
                  params:
                    - name: REVISION
                      type: string
                      description: Revision to checkout. (branch, tag, sha, ref, etc...)
                      default: ""
                    - name: PIPELINE
                      type: string
                      description: pipeline file.
                      default: "pipelines/pipeline-argo.yaml"                      
                  tasks:
                  - name: git-clone
                    taskRef:
                      name: git-clone
                      kind: ClusterTask
                    workspaces:
                    - name: output
                      workspace: source-volume
                      subPath: $(params.REVISION)                      
                    params:
                    - name: url
                      value: ssh://git@gitlab.bluzin.io:2222/nautes-labs/api-server.git
                    - name: sparseCheckoutDirectories
                      value: $(params.PIPELINE)
                    - name: revision
                      value: $(params.REVISION)
                  - name: pipeline-run
                    runAfter:
                    - git-clone
                    taskRef:
                      name: kubernetes-actions
                      kind: ClusterTask
                    params:
                      - name: image
                        value: gcr.io/cloud-builders/kubectl@sha256:c373e04fcc64c448e6cf9ebdde6fe67bb8c10b0df682da9210e1e965606b3af6
                      - name: script
                        value: |
                          COMMIT=$(tasks.git-clone.results.commit)
                          SHORT_SHA=${COMMIT: 0: 8}
                          SUFFIX=`openssl rand -hex 2`                          
                          REF=$(params.REVISION)
                          BRANCH=${REF/refs\/heads\//}
                          cat >./kustomization.yaml <<EOF
                          apiVersion: kustomize.config.k8s.io/v1beta1
                          kind: Kustomization
                          resources:
                          - $(params.PIPELINE)
                          commonLabels:
                            branch: $BRANCH
                          patches:
                          - patch: |-
                              - op: replace
                                path: /spec/params/0/value
                                value: $(params.REVISION)
                            target:
                              kind: PipelineRun
                          nameSuffix: -$SHORT_SHA-$SUFFIX
                          EOF
                          cat ./kustomization.yaml
                          kubectl apply -k ./
                    workspaces:
                    - name: manifest-dir
                      workspace: source-volume
                      subPath: $(params.REVISION) 
                  - name: nautes-reporter
                    runAfter:
                    - pipeline-run
                    taskRef:
                      name: nautes-reporter
                      kind: ClusterTask
                    params:
                      - name: GITLAB_URL
                        value: https://gitlab.bluzin.io
                      - name: TEKTON_URL
                        value: http://tekton.pipeline1.bluzin.io:31489
                      - name: BRANCH
                        value: $(params.REVISION)
                      - name: GITLAB_PROJECT_ID
                        value: pid
                      - name: COMMIT
                        value: $(tasks.git-clone.results.commit)
                      - name: REQUESTS_CA_BUNDLE
                        value: /usr/local/share/ca-certificates/ca.crt
                  workspaces:
                  - name: source-volume
                workspaces:
                - name: source-volume
                  volumeClaimTemplate:
                    spec:
                      accessModes:
                        - ReadWriteOnce
                      resources:
                        requests:
                          storage: 10M
          parameters:
            - src:
                dependencyName: gitlab-dep-push
                dataKey: body.ref
              dest: spec.params.0.value
            - src:
                dependencyName: gitlab-dep-push
                dataKey: body.pipeline
              dest: spec.params.1.value    
            - src:
                dependencyName: gitlab-dep-push
                dataKey: body.project_id
              dest: spec.pipelineSpec.tasks.2.params.3.value
